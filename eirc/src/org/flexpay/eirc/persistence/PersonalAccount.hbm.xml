<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
		"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.flexpay.eirc.persistence">

	<class name="Consumer" table="eirc_consumers_tbl">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<property name="status" column="status" not-null="true" />
		<property name="externalAccountNumber" not-null="true"
				  column="external_account_number" />
		<many-to-one name="service" column="service_id" not-null="true" class="Service" />
		<many-to-one name="responsiblePerson" column="person_id" not-null="true"
					 class="org.flexpay.ab.persistence.Person" />

		<many-to-one name="apartment" column="apartment_id" not-null="true"
					 class="org.flexpay.ab.persistence.Apartment" />
	</class>

	<class name="AccountRecordType" table="eirc_account_record_types_tbl"
		   optimistic-lock="version">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<property name="description" not-null="true" />
		<property name="typeId" not-null="true" column="type_enum_id" />
	</class>

	<class name="AccountRecord" table="eirc_account_records_tbl" optimistic-lock="version">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<many-to-one name="consumer" column="consumer_id" class="Consumer"
					 not-null="true" />
		<many-to-one name="organisation" column="organisation_id"
					 class="Organisation" not-null="false" />
		<property name="operationDate" column="operation_date" not-null="true"
				  type="timestamp" />
		<property name="amount" type="big_decimal" not-null="true" />
		<many-to-one name="recordType" column="record_type_id"
					 class="AccountRecordType" not-null="true" />
	</class>

	<query name="AccountRecord.findRegisteredRecords.count">
		select count(*) from AccountRecord
		where organisation.id=? and consumer.id=? and operationDate=? and amount=? and
		recordType.id=?
	</query>

	<query name="AccountRecord.findRegisteredRecords">
		from AccountRecord
		where organisation.id=? and consumer.id=? and operationDate=? and amount=? and
		recordType.id=?
	</query>
	
	<query name="AccountRecord.findBalanceForDate">
	<![CDATA[
		SELECT SUM(record.amount)
		FROM AccountRecord record
		WHERE record.consumer.id=? AND record.operationDate<=?
	]]>
	</query>
	
	<query name="AccountRecord.findCalculateServiceAmount">
		SELECT record.consumer.id, sum(record.amount)
		FROM AccountRecord record
		WHERE record.consumer.responsiblePerson.id=? AND
		      record.consumer.apartment.id=? AND
		      record.operationDate <![CDATA[<]]> ?
		GROUP BY record.consumer.id      
	</query>

	<query name="Consumer.findConsumers.count">
		select count(*) 
		from Consumer
		where responsiblePerson.id = ?
			and service.id = ?
			and externalAccountNumber = ?
			and apartment.id = ?
	</query>

	<query name="Consumer.findConsumers">
		from Consumer
		where responsiblePerson.id = ?
			and service.id = ?
			and externalAccountNumber = ?
			and apartment.id = ?
	</query>

</hibernate-mapping>
