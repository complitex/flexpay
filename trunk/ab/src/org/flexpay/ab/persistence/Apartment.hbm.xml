<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
		"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
		"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.flexpay.ab.persistence">

	<class name="ApartmentNumber" table="ab_apartment_numbers_tbl">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<property name="begin" not-null="true" type="date" column="begin_date" />
		<property name="end" not-null="true" type="date" column="end_date" />
		<property name="value" index="indx_value">
			<column name="value" not-null="true">
				<comment>Apartment number value</comment>
			</column>
		</property>
		<many-to-one name="apartment" class="Apartment"
					 foreign-key="FK_ab_apartment_numbers_tbl_apartment_id">
			<column name="apartment_id" not-null="true">
				<comment>Apartment reference</comment>
			</column>
		</many-to-one>
	</class>

	<query name="Apartment.findObjects.count">
		select count(o)
		from Apartment o
			inner join o.building b
			left join b.buildingses bs
		where o.status=0 and bs.id=?
	</query>

	<query name="Apartment.findObjects"><![CDATA[
		select distinct a
		from Apartment a
			inner join fetch a.building b
			left join b.buildingses bs
			left join fetch a.apartmentNumbers n
		where a.status=0 and bs.id=?
		    and n.begin <= current_date()
		    and current_date() <= n.end
		order by n.value
	]]></query>

	<query name="Apartment.readFull">
        select distinct a
		from Apartment a
			left join fetch a.apartmentNumbers
		where a.id=?
	</query>

	<query name="Apartment.readFullCollection">
        select distinct a
		from Apartment a
            left join fetch a.apartmentNumbers
		where a.id in (:ids)
	</query>

	<query name="Apartment.findByNumber">
		from Apartment a
            left join fetch a.apartmentNumbers
		where a.building.id=? and
		    exists (
		        from ApartmentNumber n
		        where n.apartment.id=a.id and n.value=? and n.end>?
            )
	</query>
	
	<query name="Apartment.findWithPersonsFull">
        select distinct a
		from Apartment a
			left join fetch a.apartmentNumbers
            inner join fetch a.building b
            inner join fetch b.district
            left join fetch b.buildingses bs
            left join fetch bs.street s
            left join fetch s.parent t
            left join fetch t.parent r
            left join fetch r.parent
			left join fetch a.personRegistrations r
			left join fetch r.person p
			left join fetch p.personAttributes pa
			left join fetch pa.lang pal
			left join fetch pal.translations tr
			left join fetch p.personIdentities pi
			left join fetch pi.identityType it
			left join fetch it.translations ittr
			left join fetch ittr.lang lang
			left join fetch lang.translations
		where a.id=? and p.status=0 and pi.status=0
	</query>

    <query name="Apartment.findWithFullHierarchy">
        select distinct a
        from Apartment a
            left join fetch a.apartmentNumbers
            inner join fetch a.building b
            inner join fetch b.district
            left join fetch b.buildingses bs
            left join fetch bs.street s
            left join fetch s.parent t
            left join fetch t.parent r
            left join fetch r.parent 
        where a.id=?
    </query>

    <query name="Apartment.findWithFullHierarchyAndNames">
        select distinct a
        from Apartment a
            left join fetch a.apartmentNumbers
            inner join fetch a.building b
            left join fetch b.buildingses bs
            left join fetch bs.buildingAttributes ba
            left join fetch ba.buildingAttributeType attrType
            left join fetch attrType.translations

            inner join fetch b.district d
            left join fetch d.nameTemporals dnt
            left join fetch dnt.value dnv
            inner join dnv.translations

        where a.id=?
            and dnt.invalidDate='2100-12-31'
    </query>

<!--
    left join fetch t.parent r
    left join fetch r.nameTemporals rnt
    left join fetch rnt.value rnv
    inner join rnv.translations
    left join fetch r.parent c
    left join fetch c.translations

    and rnt.invalidDate = '2100-12-31'

-->

	<query name="Apartment.findSimpleByTown.stats">
		select min(a.id), max(a.id), count(a.id)
		from Apartment a
			left join a.building b
			left join b.district d
		where a.status=0 and d.parent.id=?
	</query>

	<query name="Apartment.findSimpleByTown">
		select new Apartment(a.id)
		from Apartment a
			left join a.building b
			left join b.district d
		where a.status=0 and d.parent.id=? and a.id between ? and ?
	</query>

</hibernate-mapping>
