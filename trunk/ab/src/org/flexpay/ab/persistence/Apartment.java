package org.flexpay.ab.persistence;
// Generated 15.11.2007 14:59:52 by Hibernate Tools 3.2.0.b11


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Apartment generated by hbm2java
 */
@Entity
@Table(name="apartment"
    ,catalog="flexpay_db"
)
public class Apartment  implements java.io.Serializable {


     private int id;
     private Building building;
     private int apartmentStatus;
     private Set<Rooms> roomses = new HashSet<Rooms>(0);
     private Set<ApartmentNumber> apartmentNumbers = new HashSet<ApartmentNumber>(0);
     private Set<ApartmentAttribute> apartmentAttributes = new HashSet<ApartmentAttribute>(0);
     private Set<ApartmentRelation> apartmentRelations = new HashSet<ApartmentRelation>(0);
     private Set<Person> persons = new HashSet<Person>(0);

    public Apartment() {
    }

	
    public Apartment(int id, Building building, int apartmentStatus) {
        this.id = id;
        this.building = building;
        this.apartmentStatus = apartmentStatus;
    }
    public Apartment(int id, Building building, int apartmentStatus, Set<Rooms> roomses, Set<ApartmentNumber> apartmentNumbers, Set<ApartmentAttribute> apartmentAttributes, Set<ApartmentRelation> apartmentRelations, Set<Person> persons) {
       this.id = id;
       this.building = building;
       this.apartmentStatus = apartmentStatus;
       this.roomses = roomses;
       this.apartmentNumbers = apartmentNumbers;
       this.apartmentAttributes = apartmentAttributes;
       this.apartmentRelations = apartmentRelations;
       this.persons = persons;
    }
   
     @Id 
    
    @Column(name="ID", nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Building_ID", nullable=false)
    public Building getBuilding() {
        return this.building;
    }
    
    public void setBuilding(Building building) {
        this.building = building;
    }
    
    @Column(name="Apartment_Status", nullable=false)
    public int getApartmentStatus() {
        return this.apartmentStatus;
    }
    
    public void setApartmentStatus(int apartmentStatus) {
        this.apartmentStatus = apartmentStatus;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="apartment")
    public Set<Rooms> getRoomses() {
        return this.roomses;
    }
    
    public void setRoomses(Set<Rooms> roomses) {
        this.roomses = roomses;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="apartment")
    public Set<ApartmentNumber> getApartmentNumbers() {
        return this.apartmentNumbers;
    }
    
    public void setApartmentNumbers(Set<ApartmentNumber> apartmentNumbers) {
        this.apartmentNumbers = apartmentNumbers;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="apartment")
    public Set<ApartmentAttribute> getApartmentAttributes() {
        return this.apartmentAttributes;
    }
    
    public void setApartmentAttributes(Set<ApartmentAttribute> apartmentAttributes) {
        this.apartmentAttributes = apartmentAttributes;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="apartment")
    public Set<ApartmentRelation> getApartmentRelations() {
        return this.apartmentRelations;
    }
    
    public void setApartmentRelations(Set<ApartmentRelation> apartmentRelations) {
        this.apartmentRelations = apartmentRelations;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="apartment")
    public Set<Person> getPersons() {
        return this.persons;
    }
    
    public void setPersons(Set<Person> persons) {
        this.persons = persons;
    }




}


