package org.flexpay.ab.persistence.temp;
// Generated 15.11.2007 14:59:52 by Hibernate Tools 3.2.0.b11


import org.flexpay.ab.persistence.temp.ApartmentRelation;
import org.flexpay.ab.persistence.temp.Apartment;
import org.flexpay.ab.persistence.Identities;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Person generated by hbm2java
 */
@Entity
@Table(name="person"
    ,catalog="flexpay_db"
)
public class Person  implements java.io.Serializable {


     private int id;
     private Apartment apartment;
     private Date birthDate;
     private String gender;
     private Set<Personact> personacts = new HashSet<Personact>(0);
     private Set<Identities> identitieses = new HashSet<Identities>(0);
     private Set<PersonAttribute> personAttributes = new HashSet<PersonAttribute>(0);
     private Set<ApartmentRelation> apartmentRelations = new HashSet<ApartmentRelation>(0);

    public Person() {
    }

	
    public Person(int id, Date birthDate, String gender) {
        this.id = id;
        this.birthDate = birthDate;
        this.gender = gender;
    }
    public Person(int id, Apartment apartment, Date birthDate, String gender, Set<Personact> personacts, Set<Identities> identitieses, Set<PersonAttribute> personAttributes, Set<ApartmentRelation> apartmentRelations) {
       this.id = id;
       this.apartment = apartment;
       this.birthDate = birthDate;
       this.gender = gender;
       this.personacts = personacts;
       this.identitieses = identitieses;
       this.personAttributes = personAttributes;
       this.apartmentRelations = apartmentRelations;
    }
   
     @Id 
    
    @Column(name="id", nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Apartment_ID")
    public Apartment getApartment() {
        return this.apartment;
    }
    
    public void setApartment(Apartment apartment) {
        this.apartment = apartment;
    }
    
    @Column(name="BirthDate", nullable=false, length=0)
    public Date getBirthDate() {
        return this.birthDate;
    }
    
    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }
    
    @Column(name="gender", nullable=false, length=100)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="person")
    public Set<Personact> getPersonacts() {
        return this.personacts;
    }
    
    public void setPersonacts(Set<Personact> personacts) {
        this.personacts = personacts;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="person")
    public Set<Identities> getIdentitieses() {
        return this.identitieses;
    }
    
    public void setIdentitieses(Set<Identities> identitieses) {
        this.identitieses = identitieses;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="person")
    public Set<PersonAttribute> getPersonAttributes() {
        return this.personAttributes;
    }
    
    public void setPersonAttributes(Set<PersonAttribute> personAttributes) {
        this.personAttributes = personAttributes;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="person")
    public Set<ApartmentRelation> getApartmentRelations() {
        return this.apartmentRelations;
    }
    
    public void setApartmentRelations(Set<ApartmentRelation> apartmentRelations) {
        this.apartmentRelations = apartmentRelations;
    }




}


