<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
		"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.flexpay.orgs.persistence">

	<class name="org.flexpay.orgs.persistence.Cashbox" table="orgs_cashboxes_tbl" optimistic-lock="version">
		<comment>Cashboxes table</comment>
		<id name="id">
			<column name="id">
				<comment>Primary key</comment>
			</column>
			<generator class="native" />
		</id>
		<version name="version" access="field">
			<column name="version">
				<comment>Optimistic lock version</comment>
			</column>
		</version>
        <property name="status">
            <column name="status" not-null="true">
                <comment>Cashbox status</comment>
            </column>
        </property>
		<many-to-one name="paymentPoint" class="org.flexpay.orgs.persistence.PaymentPoint"
					 foreign-key="FK_orgs_cashboxes_tbl_payment_point_id">
			<column name="payment_point_id" not-null="true">
				<comment>Payment point reference</comment>
			</column>
		</many-to-one>
		<property name="tradingDayProcessInstanceId">
            <column name="tradingDayProcessInstance_Id" not-null="false">
                <comment>Trading date process instance id</comment>
            </column>
        </property>
        <set name="names" inverse="true" cascade="all-delete-orphan">
            <key column="cashbox_id" not-null="true"/>
            <one-to-many class="org.flexpay.orgs.persistence.CashboxNameTranslation"/>
        </set>
	</class>

    <class name="org.flexpay.orgs.persistence.CashboxNameTranslation" table="orgs_cashbox_name_translations_tbl" optimistic-lock="version">
        <id name="id">
            <column name="id">
                <comment>Primary key</comment>
            </column>
            <generator class="native" />
        </id>
        <version name="version" access="field">
            <column name="version">
                <comment>Optimistic lock version</comment>
            </column>
        </version>
        <property name="name">
            <column name="name" not-null="true">
                <comment>Name</comment>
            </column>
        </property>
        <properties name="lang_cashbox_pair" unique="true">
            <many-to-one name="lang" foreign-key="FK_orgs_cashbox_name_translation_language"
                         class="org.flexpay.common.persistence.Language">
                <column not-null="true" name="language_id">
                    <comment>Language reference</comment>
                </column>
            </many-to-one>
            <many-to-one name="translatable" foreign-key="FK_orgs_cashbox_name_translation_cashbox"
                         class="org.flexpay.orgs.persistence.Cashbox">
                <column name="cashbox_id" not-null="true">
                    <comment>Cashbox reference</comment>
                </column>
            </many-to-one>
        </properties>
    </class>

    <query name="Cashbox.readFull">
        select distinct c
        from Cashbox c
            inner join fetch c.paymentPoint p
            left join fetch c.names
            left join fetch p.names
            inner join fetch p.collector co
            inner join fetch co.organization
        where c.id=?
    </query>

    <query name="Cashbox.readFullCollection">
        select distinct c
        from Cashbox c
            left join fetch c.names
        where c.id in (:ids)
    </query>

    <query name="Cashbox.findCashboxes.count">
        select count(*)
        from Cashbox c
        where c.status=0
    </query>

    <query name="Cashbox.findCashboxes">
        select distinct c
        from Cashbox c
            inner join fetch c.paymentPoint
            left join fetch c.names
        where c.status=0
    </query>

    <query name="Cashbox.listCashboxes.count">
        select count(*)
        from Cashbox c
        where c.status=0 and c.paymentPoint.id=?
    </query>

    <query name="Cashbox.listCashboxes">
        select distinct c
        from Cashbox c
            inner join fetch c.paymentPoint pp
            left join fetch c.names
        where c.status=0 and pp.id=?
    </query>

    <query name="Cashbox.findCashboxesForPaymentPoint">
        select distinct c
        from Cashbox c
            inner join fetch c.paymentPoint
            left join fetch c.names
        where c.status=0 and c.paymentPoint.id=?
    </query>

	<query name="Cashbox.findCashboxesForPaymentCollector.count">
        select count(*)
        from Cashbox c
        where c.status=0 and c.paymentPoint.collector.id=?
    </query>

	<query name="Cashbox.findCashboxesForPaymentCollector">
        select distinct c
        from Cashbox c
            left join fetch c.names
        where c.status=0 and c.paymentPoint.collector.id=?
    </query>

</hibernate-mapping>
