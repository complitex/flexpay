<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
		"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
		"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<!-- Map all class hierarchy to single table -->
<hibernate-mapping package="org.flexpay.bti.persistence.apartment">

	<class name="ApartmentAttributeType" abstract="true" table="bti_apartment_attribute_types_tbl">

		<comment>Apartment attribute types</comment>

		<id name="id" column="id">
			<generator class="native" />
		</id>

        <discriminator type="string">
            <column name="discriminator" not-null="true">
                <comment>Class hierarchy descriminator</comment>
            </column>
        </discriminator>

        <property name="status">
            <column name="status" not-null="true">
                <comment>Enabled/Disabled status</comment>
            </column>
        </property>

		<property name="uniqueCode">
			<column name="unique_code" not-null="false">
				<comment>Internal unique code</comment>
			</column>
		</property>

		<property name="isTemporal" access="field">
			<column name="is_temporal" not-null="true">
				<comment>Temporal flag</comment>
			</column>
		</property>

        <many-to-one name="group" foreign-key="bti_apartment_attribute_types_tbl" class="ApartmentAttributeGroup">
            <column name="group_id" not-null="true">
                <comment>Attribute group reference</comment>
            </column>
        </many-to-one>

		<set name="translations" inverse="true" cascade="all-delete-orphan">
			<key column="attribute_type_id" not-null="true" />
			<one-to-many class="ApartmentAttributeTypeName" />
		</set>

		<subclass name="ApartmentAttributeTypeSimple" discriminator-value="simple" />

		<subclass name="ApartmentAttributeTypeEnum" discriminator-value="enum">

			<set name="values" inverse="true" cascade="all-delete-orphan">
				<key column="attribute_type_enum_id" not-null="true" />
				<one-to-many class="ApartmentAttributeTypeEnumValue" />
			</set>
		</subclass>

	</class>

	<class name="ApartmentAttributeTypeEnumValue" table="bti_apartment_attribute_type_enum_values_tbl">
		<comment>Values for enumeration attribute types</comment>
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<property name="order">
			<column name="order_value" not-null="true">
				<comment>Relatiove order value</comment>
			</column>
		</property>
		<property name="value">
			<column name="value" not-null="true">
				<comment>Enum value</comment>
			</column>
		</property>
		<many-to-one name="typeEnum" class="ApartmentAttributeTypeEnum"
					 foreign-key="bti_apartment_attribute_type_enum_values_tbl_enum_id">
			<column name="attribute_type_enum_id" not-null="true">
				<comment>Attribute type enum reference</comment>
			</column>
		</many-to-one>
	</class>

	<class name="ApartmentAttributeTypeName" table="bti_apartment_attribute_type_names_tbl">
		<comment>Apartment attribute type translations</comment>
		<id name="id" column="id">
			<generator class="native" />
		</id>

		<property name="name">
			<column name="name" not-null="true">
				<comment>Translation value</comment>
			</column>
		</property>

		<properties name="lang_apartment_attribute_type_pair" unique="true">

			<many-to-one name="lang" class="org.flexpay.common.persistence.Language"
						 foreign-key="bti_apartment_attribute_type_names_tbl_language_id">
				<column name="language_id" not-null="true">
					<comment>Language reference</comment>
				</column>
			</many-to-one>

			<many-to-one name="translatable" class="ApartmentAttributeType"
						 foreign-key="bti_apartment_attribute_type_names_tbl_attribute_type_id">
				<column name="attribute_type_id" not-null="true">
					<comment>Apartment attribute type reference</comment>
				</column>
			</many-to-one>
		</properties>
	</class>

	<query name="ApartmentAttributeType.readFull">
		select distinct t
		from ApartmentAttributeType t
			left join fetch t.translations
			left join fetch t.group 
		where t.id=?
	</query>

	<query name="ApartmentAttributeType.findTypes.count">
		select count(t)
		from ApartmentAttributeType t
        where t.status=0
	</query>

	<query name="ApartmentAttributeType.findTypes">
		from ApartmentAttributeType t
        where t.status=0
	</query>

	<query name="ApartmentAttributeType.findAllTypes">
		select distinct t
		from ApartmentAttributeType t
			left join fetch t.translations
	</query>

	<query name="ApartmentAttributeType.findTypesByName">
		select distinct t
		from ApartmentAttributeType t
			left join t.translations n
		where (n.name=? or t.uniqueCode=?) and t.status=0
	</query>

	<query name="ApartmentAttributeTypeEnum.findValues">
		from ApartmentAttributeTypeEnumValue v
		where v.typeEnum.id=?
	</query>

	<query name="ApartmentAttributeType.checkUniqueName"><![CDATA[
		select 1
		from Dual
		where exists(
			from ApartmentAttributeType t
				left join t.translations tn
		    where (tn.name=? or t.uniqueCode=?) and (t.id<>? or 1=?) and t.status=0)
		]]>
	</query>

</hibernate-mapping>
