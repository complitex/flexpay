<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
		"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.flexpay.common.persistence">

	<class name="DataSourceDescription" table="common_data_source_descriptions_tbl">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<property name="description" not-null="true" />
        <set name="dataCorrections" inverse="true" cascade="all-delete-orphan">
            <key column="data_source_description_id" not-null="true" />
            <one-to-many class="DataCorrection" />
        </set>
	</class>

	<class name="DataCorrection" table="common_data_corrections_tbl">
		<comment>Various data sources objects mapping</comment>
		<id name="id">
			<column name="id">
				<comment>Primary key</comment>
			</column>
			<generator class="native" />
		</id>
		<property name="internalObjectId">
			<column name="internal_object_id" not-null="true">
				<comment>Flexpay object id (ref)</comment>
			</column>
		</property>
		<property name="objectType">
			<column name="object_type" not-null="true">
				<comment>Object type code</comment>
			</column>
		</property>
		<property name="externalId">
			<column name="external_object_id" not-null="true">
				<comment>External object identifier</comment>
			</column>
		</property>
		<many-to-one name="dataSourceDescription" class="DataSourceDescription"
					 foreign-key="common_data_corrections_tbl_dsd_id">
			<column name="data_source_description_id" not-null="false">
				<comment>Optional data source description reference</comment>
			</column>
		</many-to-one>
	</class>

	<query name="DataSourceDescription.readFull">
		from DataSourceDescription d
		where d.id=?
	</query>

	<query name="DataSourceDescription.findMasterSourceDescription">
		from DataSourceDescription d
		where d.description='Master-Index'
	</query>

    <query name="DataSourceDescription.find">
        from DataSourceDescription
    </query>

    <query name="DataSourceDescription.findAvailableDataSources">
        select distinct dsd
        from DataSourceDescription dsd
        where dsd.id not in
            (select dsd1.id
            from DataSourceDescription dsd1
                left join dsd1.dataCorrections dc
            where dc.internalObjectId=? and dc.objectType=?)
    </query>

    <query name="DataCorrection.readFull">
        from DataCorrection dc
            inner join fetch dc.dataSourceDescription
        where dc.id=?
    </query>

    <query name="DataCorrection.find">
        select distinct dc
        from DataCorrection dc
            inner join fetch dc.dataSourceDescription
        where dc.internalObjectId=? and dc.objectType=?
    </query>

    <query name="DataCorrection.find.count">
        select count(*)
        from DataCorrection dc
        where dc.internalObjectId=? and dc.objectType=?
    </query>

	<query name="DataCorrection.getInternalId" read-only="true" cache-mode="ignore" cacheable="false">
		select new java.lang.Long(c.internalObjectId)
		from DataCorrection c
		where c.externalId=? and c.objectType=? and c.dataSourceDescription.id=?
	</query>

</hibernate-mapping>
