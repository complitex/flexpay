<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.4.xsd">

    <security:http entry-point-ref="authenticationEntryPoint">
        <security:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationProcessingFilter" />
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="authenticationProvider"  />
    </security:authentication-manager>
    <security:global-method-security secured-annotations="enabled" jsr250-annotations="enabled" />

    <bean id="filterChainProxy"
          class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map path-type="ant">
            <security:filter-chain pattern="/ws/**" filters="none" />
            <security:filter-chain pattern="/**"
                                   filters="securityContextPersistenceFilter,logoutFilter,openssoFilter,authenticationProcessingFilter,exceptionTranslationFilter,filterSecurityInterceptor" />
        </security:filter-chain-map>
    </bean>

    <alias name="filterChainProxy" alias="springSecurityFilterChain" />

    <bean id="securityContextPersistenceFilter"
          class="org.springframework.security.web.context.SecurityContextPersistenceFilter"
          p:forceEagerSessionCreation="true" />

    <bean id="filterSecurityInterceptor"
          class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor"
          p:authenticationManager-ref="authenticationManager"
          p:accessDecisionManager-ref="accessDecisionManager"
          p:observeOncePerRequest="false">
        <property name="objectDefinitionSource">
            <bean class="org.flexpay.common.action.security.opensso.OpenSSOObjectDefinitionSource">
                <property name="anonymousUrls">
                    <list>
                        <value>/logout*</value>
                        <value>/denied*</value>
                        <value>/resources/*</value>
                        <value>/confirmationTradingDay*</value>
                        <value>/process*</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="authenticationProvider"
          class="org.flexpay.common.action.security.opensso.OpenSSOAuthenticationProvider"
          p:authenticationUserDetailsService-ref="authenticatedUserDetailsService" />

    <bean id="authenticatedUserDetailsService"
          class="org.flexpay.common.service.impl.UserPreferencesAuthenticationService"
          p:userPreferencesService-ref="userPreferencesService" />

    <bean id="openssoFilter" 
          class="org.flexpay.common.action.security.opensso.OpenSSOProcessingFilter"
          p:postOnly="false"
          p:authenticationManager-ref="authenticationManager"
          p:authenticationFailureHandler-ref="authenticationFailureHandler"
          p:authenticationSuccessHandler-ref="authenticationSuccessHandler"
          p:filterProcessesUrl="/j_spring_security_check" />

    <bean id="authenticationFailureHandler"
          class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
          p:defaultFailureUrl="/resources/common/jsp/forbidden.jsp" />

    <bean id="authenticationSuccessHandler"
          class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
          p:defaultTargetUrl="/" />

    <bean id="accessDeniedHandler"
          class="org.springframework.security.web.access.AccessDeniedHandlerImpl"
          p:errorPage="/resources/common/jsp/forbidden.jsp" />

    <bean id="authenticationEntryPoint"
          class="org.flexpay.common.action.security.opensso.OpenSSOProcessingFilterEntryPoint"
          p:loginUrl="${app.config.common.opensso.url}"
          p:filterProcessesUrl="/j_spring_security_check" />

    <bean id="exceptionTranslationFilter"
          class="org.springframework.security.web.access.ExceptionTranslationFilter"
          p:authenticationEntryPoint-ref="authenticationEntryPoint"
          p:accessDeniedHandler-ref="accessDeniedHandler" />

    <bean id="logoutFilter"
          class="org.springframework.security.web.authentication.logout.LogoutFilter"
          p:filterProcessesUrl="/logout">
        <constructor-arg value="/" />
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"
                      p:invalidateHttpSession="true" />
                <bean id="openSsoLogoutHandler"
                      class="org.flexpay.common.action.security.opensso.OpenSSOLogoutHandler" />
            </list>
        </constructor-arg>
    </bean>

    <!--
        Using Affirmative voter will DENY all that which is not
        explicitly allowed.
    -->
    <bean name="accessDecisionManager" 
          class="org.springframework.security.access.vote.AffirmativeBased"
          p:allowIfAllAbstainDecisions="true">
        <property name="decisionVoters">
            <list>
                <bean class="org.flexpay.common.action.security.opensso.OpenSSOVoter" />
            </list>
        </property>
    </bean>

    <bean id="authenticationProcessingFilter"
          class="org.flexpay.common.action.security.FPAuthenticationProcessingFilter"
          p:postOnly="false"
          p:authenticationSuccessHandler-ref="authenticationSuccessHandler"
          p:authenticationManager-ref="authenticationManager" />

</beans>
