<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.4.xsd">

    <security:http entry-point-ref="preAuthenticatedProcessingFilterEntryPoint" auto-config="false">
        <security:intercept-url pattern="/resources/common/jsp/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/confirmationTradingDay*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/resources/**" filters="none" />
        <security:intercept-url pattern="/confirmationTradingDay*" filters="none" />
        <security:intercept-url pattern="/dicts/**" access="ROLE_BASIC" />
        <!--<concurrent-session-control max-sessions="1" exception-if-maximum-exceeded="true" />-->
        <security:custom-filter position="PRE_AUTH_FILTER" ref="myPreAuthFilter" />
        <security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter" />
        <security:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationProcessingFilter" />
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="preAuthenticatedAuthenticationProvider"  />
    </security:authentication-manager>
    <security:global-method-security secured-annotations="enabled" jsr250-annotations="enabled" />

    <bean id="myPreAuthFilter"
          class="org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter"
          p:authenticationManager-ref="authenticationManager"
          p:authenticationDetailsSource-ref="authenticationDetailsSource"
          p:continueFilterChainOnUnsuccessfulAuthentication="false" />

    <bean id="authenticationDetailsSource"
          class="org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource"
          p:mappableRolesRetriever-ref="j2eeMappableRolesRetriever"
          p:userRoles2GrantedAuthoritiesMapper-ref="j2eeUserRoles2GrantedAuthoritiesMapper" />

    <bean id="j2eeUserRoles2GrantedAuthoritiesMapper"
          class="org.springframework.security.core.authority.mapping.SimpleAttributes2GrantedAuthoritiesMapper"
          p:convertAttributeToUpperCase="true" />

    <bean id="j2eeMappableRolesRetriever"
          class="org.springframework.security.web.authentication.preauth.j2ee.WebXmlMappableAttributesRetriever" />

    <bean id="webXmlResource"
          class="org.springframework.web.context.support.ServletContextResource">
        <constructor-arg ref="servletContext" />
        <constructor-arg value="/WEB-INF/web.xml" />
    </bean>

    <bean id="servletContext"
          class="org.springframework.web.context.support.ServletContextFactoryBean" />

    <bean id="preAuthenticatedProcessingFilterEntryPoint"
          class="org.springframework.security.web.authentication.preauth.PreAuthenticatedProcessingFilterEntryPoint" />

    <bean id="preAuthenticatedAuthenticationProvider"
          class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider"
          p:preAuthenticatedUserDetailsService-ref="userPreferencesAuthenticationService" />

    <bean id="preAuthenticatedUserDetailsService"
          class="org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService" />

    <bean id="userPreferencesAuthenticationService"
          class="org.flexpay.common.service.impl.UserPreferencesAuthenticationService"
          p:detailsService-ref="preAuthenticatedUserDetailsService"
          p:userPreferencesService-ref="userPreferencesService" />

    <!-- ===================== LOGOUT FILTER ==================== -->
    <bean id="logoutFilter"
          class="org.springframework.security.web.authentication.logout.LogoutFilter"
          p:filterProcessesUrl="/logout">
        <constructor-arg index="0" value="/" />
        <constructor-arg index="1">
            <list>
                <ref bean="logoutEventBroadcaster" />
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
                    <property name="invalidateHttpSession" value="true" />
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="logoutEventBroadcaster"
          class="org.flexpay.common.action.security.LogoutEventBroadcaster" />

    <bean id="authenticationFailureHandler"
          class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"
          p:defaultFailureUrl="/resources/common/jsp/forbidden.jsp" />

    <bean id="authenticationSuccessHandler"
          class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler"
          p:defaultTargetUrl="/" />

    <bean id="authenticationProcessingFilter"
          class="org.flexpay.common.action.security.FPAuthenticationProcessingFilter"
          p:postOnly="false"
          p:authenticationFailureHandler-ref="authenticationFailureHandler"
          p:authenticationSuccessHandler-ref="authenticationSuccessHandler"
          p:authenticationManager-ref="authenticationManager" />

</beans>
