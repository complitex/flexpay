<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean name="jobObjectsSyncDetailBean"
          class="org.springframework.scheduling.quartz.JobDetailBean"
          p:jobClass="org.flexpay.common.persistence.history.ObjectsSyncQuartzJob">
        <property name="jobDataAsMap">
            <map>
                <entry key="syncerJob" value-ref="objectsSyncerJob" />
                <entry key="enabled" value="${app.config.common.history.sync.enabled}" />
            </map>
        </property>
    </bean>

    <bean name="jobHistoryPackBean"
          class="org.springframework.scheduling.quartz.JobDetailBean"
          p:jobClass="org.flexpay.common.persistence.history.HistoryPackQuartzJob">
        <property name="jobDataAsMap">
            <map>
                <entry key="lockManager" value-ref="lockManager" />
                <entry key="historyPacker" value-ref="xmlHistoryPacker" />
                <entry key="historyConsumerService" value-ref="historyConsumerService" />
                <entry key="enabled" value="${app.config.common.history.pack.enabled}" />
            </map>
        </property>
    </bean>

    <bean name="jobHistoryDistributeBean"
          class="org.springframework.scheduling.quartz.JobDetailBean"
          p:jobClass="org.flexpay.common.persistence.history.HistoryDistributorQuartzJob">
        <property name="jobDataAsMap">
            <map>
                <entry key="distributor" value-ref="historyConsumptionGroupsDistributor" />
                <entry key="enabled" value="${app.config.common.history.distribute.enabled}" />
            </map>
        </property>
    </bean>

    <bean name="jobHistoryUnpackBean"
          class="org.springframework.scheduling.quartz.JobDetailBean"
          p:jobClass="org.flexpay.common.persistence.history.HistoryUnpackQuartzJob">
        <property name="jobDataAsMap">
            <map>
                <entry key="lockManager" value-ref="lockManager" />
                <entry key="historyUnPacker" value-ref="xmlHistoryUnPacker" />
                <entry key="unpackManager" value-ref="historyUnpackManager" />
                <entry key="enabled" value="${app.config.common.history.unpack.enabled}" />
            </map>
        </property>
    </bean>

    <bean id="jobObjectsSyncTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerBean"
          p:jobDetail-ref="jobObjectsSyncDetailBean"
          p:cronExpression="${common.sync.cron.schedule}" />

    <bean id="jobHistoryPackTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerBean"
          p:jobDetail-ref="jobHistoryPackBean"
          p:cronExpression="${common.history_pack.cron.schedule}" />

    <bean id="jobHistoryDistributeTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerBean"
          p:jobDetail-ref="jobHistoryDistributeBean"
          p:cronExpression="${common.history_distribute.cron.schedule}" />

    <bean id="jobHistoryUnPackTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerBean"
          p:jobDetail-ref="jobHistoryUnpackBean"
          p:cronExpression="${common.history_unpack.cron.schedule}" />

    <bean id="schedulerFactoryBean"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
          p:startupDelay="20">
        <property name="triggers">
            <list>
                <ref bean="jobObjectsSyncTrigger" />
                <ref bean="jobHistoryPackTrigger" />
                <ref bean="jobHistoryDistributeTrigger" />
                <ref bean="jobHistoryUnPackTrigger" />
            </list>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
            </props>
        </property>
    </bean>

    <bean id="taskExecutor" 
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
          p:corePoolSize="5"
          p:maxPoolSize="10"
          p:queueCapacity="25" />

</beans>
