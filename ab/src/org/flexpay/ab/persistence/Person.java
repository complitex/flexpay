package org.flexpay.ab.persistence;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Person generated by hbm2java
 */
@Entity
@Table (name = "person", catalog = "flexpay_db")
public class Person implements Serializable {

	// Fields

	private int id;
	private Apartment apartment;
	private Date birthDate;
	private String gender;
	private Set<Personact> personacts = new HashSet<Personact>(0);
	private Set<Identities> identitieses = new HashSet<Identities>(0);
	private Set<PersonAttribute> personAttributes = new HashSet<PersonAttribute>(0);
	private Set<ApartmentRelation> apartmentRelations = new HashSet<ApartmentRelation>(0);

	// Constructors

	/**
	 * default constructor
	 */
	public Person() {
	}

	/**
	 * minimal constructor
	 */
	public Person(int id, Date birthDate, String gender) {
		this.id = id;
		this.birthDate = birthDate;
		this.gender = gender;
	}

	/**
	 * full constructor
	 */
	public Person(int id, Apartment apartment, Date birthDate, String gender, Set<Personact> personacts, Set<Identities> identitieses, Set<PersonAttribute> personAttributes, Set<ApartmentRelation> apartmentRelations) {
		this.id = id;
		this.apartment = apartment;
		this.birthDate = birthDate;
		this.gender = gender;
		this.personacts = personacts;
		this.identitieses = identitieses;
		this.personAttributes = personAttributes;
		this.apartmentRelations = apartmentRelations;
	}

	// Property accessors
	@Id
	@Column (name = "id", unique = false, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne (cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn (name = "Apartment_ID", unique = false, nullable = true, insertable = true, updatable = true)
	public Apartment getApartment() {
		return this.apartment;
	}

	public void setApartment(Apartment apartment) {
		this.apartment = apartment;
	}

	@Column (name = "BirthDate", unique = false, nullable = false, insertable = true, updatable = true, length = 0)
	public Date getBirthDate() {
		return this.birthDate;
	}

	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}

	@Column (name = "gender", unique = false, nullable = false, insertable = true, updatable = true, length = 100)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@OneToMany (cascade = {}, fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Personact> getPersonacts() {
		return this.personacts;
	}

	public void setPersonacts(Set<Personact> personacts) {
		this.personacts = personacts;
	}

	@OneToMany (cascade = {}, fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Identities> getIdentitieses() {
		return this.identitieses;
	}

	public void setIdentitieses(Set<Identities> identitieses) {
		this.identitieses = identitieses;
	}

	@OneToMany (cascade = {}, fetch = FetchType.LAZY, mappedBy = "person")
	public Set<PersonAttribute> getPersonAttributes() {
		return this.personAttributes;
	}

	public void setPersonAttributes(Set<PersonAttribute> personAttributes) {
		this.personAttributes = personAttributes;
	}

	@OneToMany (cascade = {}, fetch = FetchType.LAZY, mappedBy = "person")
	public Set<ApartmentRelation> getApartmentRelations() {
		return this.apartmentRelations;
	}

	public void setApartmentRelations(Set<ApartmentRelation> apartmentRelations) {
		this.apartmentRelations = apartmentRelations;
	}

}


