package org.flexpay.ab.persistence;

import org.flexpay.common.dao.LongShortValue;

import javax.persistence.*;
import java.io.Serializable;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/**
 * Country generated by hbm2java
 */
@Entity
@Table (name = "country", catalog = "flexpay_db")
public class Country implements Serializable {

	// Fields

	private int id;
//	private String countryName;
    private Map<String, LongShortValue> countryNames = new HashMap<String, LongShortValue>();
    private int countryStatus;
	private String countryShortName;
	private Set<Region> regions = new HashSet<Region>(0);

	// Constructors

	/**
	 * default constructor
	 */
	public Country() {
	}

	/**
	 * Getter for property 'id'.
	 *
	 * @return Value for property 'id'.
	 */
	@Id
	@Column (name = "ID", unique = false, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	/**
	 * Setter for property 'id'.
	 *
	 * @param id Value to set for property 'id'.
	 */
	public void setId(int id) {
		this.id = id;
	}


	/**
	 * Getter for property 'countryStatus'.
	 *
	 * @return Value for property 'countryStatus'.
	 */
	@Column (name = "Country_status", unique = false, nullable = false, insertable = true, updatable = true)
	public int getCountryStatus() {
		return this.countryStatus;
	}

	/**
	 * Setter for property 'countryStatus'.
	 *
	 * @param countryStatus Value to set for property 'countryStatus'.
	 */
	public void setCountryStatus(int countryStatus) {
		this.countryStatus = countryStatus;
	}

	/**
	 * Getter for property 'countryShortName'.
	 *
	 * @return Value for property 'countryShortName'.
	 */
	@Column (name = "Country_Short_Name", unique = false, nullable = false, insertable = true, updatable = true, length = 200)
	public String getCountryShortName() {
		return this.countryShortName;
	}

	/**
	 * Setter for property 'countryShortName'.
	 *
	 * @param countryShortName Value to set for property 'countryShortName'.
	 */
	public void setCountryShortName(String countryShortName) {
		this.countryShortName = countryShortName;
	}

	/**
	 * Getter for property 'regions'.
	 *
	 * @return Value for property 'regions'.
	 */
	@OneToMany (cascade = {}, fetch = FetchType.LAZY, mappedBy = "country")
	public Set<Region> getRegions() {
		return this.regions;
	}

	/**
	 * Setter for property 'regions'.
	 *
	 * @param regions Value to set for property 'regions'.
	 */
	public void setRegions(Set<Region> regions) {
		this.regions = regions;
	}

    /**
     * Getter for country names
     * @return country names
     */
    public Map<String, LongShortValue> getCountryNames() {
        return countryNames;
    }

    /**
     * Setter for country names
     * @param countryNames
     */
    public void setCountryNames(Map<String, LongShortValue> countryNames) {
        this.countryNames = countryNames;
    }

    public LongShortValue getCountryName (String lang){
        LongShortValue lsv = this.countryNames.get(lang);
        if (lsv == null) lsv = new LongShortValue("","");
        return lsv;
    }

    public void setCountryName(String longName, String shortName, String lang){
        if (lang == null || lang.length() == 0) {
            throw new NullPointerException("Country : setCountryName: invalid lang : name=" + longName + " lang=" + lang);
        }
        if (longName !=null && longName.length()>0){
            setCountryName(new LongShortValue(longName,shortName),lang);
        } else {
            this.countryNames.remove(lang);
        }
    }

    public void setCountryName(LongShortValue countryName, String lang){
        this.countryNames.put(lang,countryName);
    }
}


