<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
		"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.flexpay.ab.persistence">

	<class name="Street" table="ab_streets_tbl" optimistic-lock="version">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<many-to-one name="parent" column="town_id" class="Town" not-null="true" />
		<property name="status" not-null="true" />

		<set name="nameTemporals" inverse="true" cascade="all" lazy="true" sort="natural">
			<key column="street_id" not-null="true" />
			<one-to-many class="StreetNameTemporal" />
		</set>
		<set name="typeTemporals" inverse="true" cascade="all" lazy="true" sort="natural">
			<key column="street_id" not-null="true" />
			<one-to-many class="StreetTypeTemporal" />
		</set>
		<set name="districts" table="ab_streets_districts_tbl">
			<key column="street_id" />
			<many-to-many class="District" column="district_id" />
		</set>
		<set name="buildingses" inverse="true">
			<key column="street_id" />
			<one-to-many class="Buildings" />
		</set>
		<!--<set name="nameIndexes" inverse="true">-->
			<!--<key column="street_id" />-->
			<!--<one-to-many class="StreetNameIndex" />-->
		<!--</set>-->
	</class>

	<class name="StreetTypeTemporal" table="ab_street_types_temporal_tbl">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<property name="begin" column="begin_date" type="date" not-null="true" />
		<property name="end" column="end_date" type="date" not-null="true" />
		<property name="createDate" column="create_date" type="date" not-null="true" />
		<property name="invalidDate" column="invalid_date" type="date" not-null="true" />
		<many-to-one name="object" class="Street" foreign-key="ab_street_names_temporal_tbl_street_id">
			<column name="street_id" not-null="true">
				<comment>Street reference</comment>
			</column>
		</many-to-one>
		<many-to-one name="value" class="StreetType" foreign-key="FK_street_type">
			<column name="street_type_id" not-null="false">
				<comment>Street type reference</comment>
			</column>
		</many-to-one>
	</class>

	<class name="StreetNameTemporal" table="ab_street_names_temporal_tbl">
		<comment>Street name temporals</comment>
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<property name="begin" column="begin_date" type="date" not-null="true" />
		<property name="end" column="end_date" type="date" not-null="true" />
		<property name="createDate" column="create_date" type="date" not-null="true" />
		<property name="invalidDate" column="invalid_date" type="date" not-null="true" />
		<many-to-one name="object" class="Street" foreign-key="ab_street_names_temporal_tbl_street_id">
			<column name="street_id" not-null="true">
				<comment>Street reference</comment>
			</column>
		</many-to-one>
		<many-to-one name="value" class="StreetName" cascade="all"
					 foreign-key="ab_street_names_temporal_tbl_street_name_id">
			<column name="street_name_id" not-null="false">
				<comment>Street name reference</comment>
			</column>
		</many-to-one>
	</class>

	<class name="StreetName" table="ab_street_names_tbl" optimistic-lock="version">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<many-to-one name="object" column="street_id" class="Street" not-null="true" />

		<set name="translations" inverse="true" cascade="all-delete-orphan">
			<key column="street_name_id" not-null="true" />
			<one-to-many class="StreetNameTranslation" />
		</set>
	</class>

	<class name="StreetNameTranslation" table="ab_street_name_translations_tbl"
		   optimistic-lock="version">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<property name="name" />
		<properties name="lang_street_name_pair" unique="true">
			<many-to-one name="translatable" column="street_name_id"
						 not-null="true" class="StreetName" />
			<many-to-one name="lang" column="language_id" not-null="true"
						 class="org.flexpay.common.persistence.Language" />
		</properties>
	</class>

	<query name="Street.findObjects">
		SELECT DISTINCT o
		FROM Street o
		LEFT JOIN FETCH o.nameTemporals t
		LEFT JOIN FETCH t.value v
		LEFT JOIN FETCH v.translations tr
		LEFT JOIN FETCH tr.lang l
		LEFT JOIN FETCH o.typeTemporals tt
		LEFT JOIN FETCH tt.value tv
		LEFT JOIN FETCH tv.translations ttr
		LEFT JOIN FETCH ttr.lang tl
		WHERE t.invalidDate='2100-12-31' and (tt is null or tt.invalidDate ='2100-12-31')
		and o.status=? and o.parent.id=?
	</query>

	<query name="Street.findObjects.count">
		select count(*) from Street o
		where o.status=? and o.parent.id=?
	</query>

	<query name="Street.readFull">
		SELECT distinct o
		FROM Street o
		LEFT JOIN FETCH o.nameTemporals t
		LEFT JOIN FETCH t.value v
		LEFT JOIN FETCH v.translations tr
		LEFT JOIN FETCH tr.lang l
		LEFT JOIN FETCH l.translations
		LEFT JOIN FETCH o.typeTemporals tt
		LEFT JOIN FETCH tt.value tv
		LEFT JOIN FETCH tv.translations ttr
		LEFT JOIN FETCH ttr.lang tl
		LEFT JOIN FETCH tl.translations
		LEFT JOIN FETCH o.districts d
		LEFT JOIN FETCH d.nameTemporals dt
		LEFT JOIN FETCH dt.value dv
		LEFT JOIN FETCH dv.translations
		WHERE o.id=? and (dt is null or dt.invalidDate='2100-12-31')
	</query>

	<query name="StreetNameTemporal.readFull">
		SELECT DISTINCT t
		FROM StreetNameTemporal t
		LEFT JOIN FETCH t.value v
		LEFT JOIN FETCH v.translations tr
		LEFT JOIN FETCH tr.lang l
		LEFT JOIN FETCH l.translations
		WHERE t.id=?
	</query>

	<query name="StreetName.readFull">
		SELECT DISTINCT n
		FROM StreetName n
		LEFT JOIN FETCH n.object
		LEFT JOIN FETCH n.translations tr
		LEFT JOIN FETCH tr.lang l
		LEFT JOIN FETCH l.translations
		WHERE n.id=?
	</query>

	<query name="Street.findByTownAndName">
		SELECT DISTINCT s
		FROM Street s
		LEFT JOIN FETCH s.nameTemporals t
		LEFT JOIN FETCH t.value v
		LEFT JOIN FETCH v.translations tr
		LEFT JOIN FETCH tr.lang l
		LEFT JOIN FETCH s.typeTemporals tt
		LEFT JOIN FETCH tt.value tv
		LEFT JOIN FETCH tv.translations ttr
		WHERE s.parent.id=? AND t.invalidDate='2100-12-31' AND lower(tr.name) like ?
	</query>

</hibernate-mapping>
