package org.flexpay.ab.persistence;

import javax.persistence.*;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * Building generated by hbm2java
 */
@Entity
@Table (name = "building", catalog = "flexpay_db")
public class Building implements Serializable {

	// Fields

	private int id;
	private District district;
	private int buildingStatus;
	private Set<BuildingStatus> buildingStatuses = new HashSet<BuildingStatus>(0);
	private Set<Buildings> buildingses = new HashSet<Buildings>(0);
	private Set<Apartment> apartments = new HashSet<Apartment>(0);

	// Constructors

	/**
	 * default constructor
	 */
	public Building() {
	}

	/**
	 * minimal constructor
	 */
	public Building(int id, District district, int buildingStatus) {
		this.id = id;
		this.district = district;
		this.buildingStatus = buildingStatus;
	}

	/**
	 * full constructor
	 */
	public Building(int id, District district, int buildingStatus, Set<BuildingStatus> buildingStatuses, Set<Buildings> buildingses, Set<Apartment> apartments) {
		this.id = id;
		this.district = district;
		this.buildingStatus = buildingStatus;
		this.buildingStatuses = buildingStatuses;
		this.buildingses = buildingses;
		this.apartments = apartments;
	}

	// Property accessors
	@Id
	@Column (name = "ID", unique = false, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne (cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn (name = "District_ID", unique = false, nullable = false, insertable = true, updatable = true)
	public District getDistrict() {
		return this.district;
	}

	public void setDistrict(District district) {
		this.district = district;
	}

	@Column (name = "Building_Status", unique = false, nullable = false, insertable = true, updatable = true)
	public int getBuildingStatus() {
		return this.buildingStatus;
	}

	public void setBuildingStatus(int buildingStatus) {
		this.buildingStatus = buildingStatus;
	}

	@OneToMany (cascade = {}, fetch = FetchType.LAZY, mappedBy = "building")
	public Set<BuildingStatus> getBuildingStatuses() {
		return this.buildingStatuses;
	}

	public void setBuildingStatuses(Set<BuildingStatus> buildingStatuses) {
		this.buildingStatuses = buildingStatuses;
	}

	@OneToMany (cascade = {}, fetch = FetchType.LAZY, mappedBy = "building")
	public Set<Buildings> getBuildingses() {
		return this.buildingses;
	}

	public void setBuildingses(Set<Buildings> buildingses) {
		this.buildingses = buildingses;
	}

	@OneToMany (cascade = {}, fetch = FetchType.LAZY, mappedBy = "building")
	public Set<Apartment> getApartments() {
		return this.apartments;
	}

	public void setApartments(Set<Apartment> apartments) {
		this.apartments = apartments;
	}

}


