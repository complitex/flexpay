package org.flexpay.ab.persistence;

import javax.persistence.*;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * Buildings generated by hbm2java
 */
@Entity
@Table (name = "buildings", catalog = "flexpay_db")
public class Buildings implements Serializable {

	// Fields

	private int id;
	private Street street;
	private Building building;
	private int status;
	private Set<BuildingAttribute> buildingAttributes = new HashSet<BuildingAttribute>(0);

	// Constructors

	/**
	 * default constructor
	 */
	public Buildings() {
	}

	/**
	 * minimal constructor
	 */
	public Buildings(int id, Street street, Building building, int status) {
		this.id = id;
		this.street = street;
		this.building = building;
		this.status = status;
	}

	/**
	 * full constructor
	 */
	public Buildings(int id, Street street, Building building, int status, Set<BuildingAttribute> buildingAttributes) {
		this.id = id;
		this.street = street;
		this.building = building;
		this.status = status;
		this.buildingAttributes = buildingAttributes;
	}

	// Property accessors
	@Id
	@Column (name = "id", unique = false, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne (cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn (name = "Street_ID", unique = false, nullable = false, insertable = true, updatable = true)
	public Street getStreet() {
		return this.street;
	}

	public void setStreet(Street street) {
		this.street = street;
	}

	@ManyToOne (cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn (name = "Building_ID", unique = false, nullable = false, insertable = true, updatable = true)
	public Building getBuilding() {
		return this.building;
	}

	public void setBuilding(Building building) {
		this.building = building;
	}

	@Column (name = "status", unique = false, nullable = false, insertable = true, updatable = true)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@OneToMany (cascade = {}, fetch = FetchType.LAZY, mappedBy = "buildings")
	public Set<BuildingAttribute> getBuildingAttributes() {
		return this.buildingAttributes;
	}

	public void setBuildingAttributes(Set<BuildingAttribute> buildingAttributes) {
		this.buildingAttributes = buildingAttributes;
	}

}


