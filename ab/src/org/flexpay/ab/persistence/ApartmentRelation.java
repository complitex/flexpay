package org.flexpay.ab.persistence;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * ApartmentRelation generated by hbm2java
 */
@Entity
@Table (name = "apartment_relation", catalog = "flexpay_db")
public class ApartmentRelation implements Serializable {

	// Fields

	private int id;
	private ApartmentRelationType apartmentRelationType;
	private Person person;
	private Apartment apartment;
	private int owningPart;
	private Date begin;
	private Date end;
	private Set<Acts> actses = new HashSet<Acts>(0);

	// Constructors

	/**
	 * default constructor
	 */
	public ApartmentRelation() {
	}

	/**
	 * minimal constructor
	 */
	public ApartmentRelation(int id, ApartmentRelationType apartmentRelationType, Person person, Apartment apartment, int owningPart, Date begin, Date end) {
		this.id = id;
		this.apartmentRelationType = apartmentRelationType;
		this.person = person;
		this.apartment = apartment;
		this.owningPart = owningPart;
		this.begin = begin;
		this.end = end;
	}

	/**
	 * full constructor
	 */
	public ApartmentRelation(int id, ApartmentRelationType apartmentRelationType, Person person, Apartment apartment, int owningPart, Date begin, Date end, Set<Acts> actses) {
		this.id = id;
		this.apartmentRelationType = apartmentRelationType;
		this.person = person;
		this.apartment = apartment;
		this.owningPart = owningPart;
		this.begin = begin;
		this.end = end;
		this.actses = actses;
	}

	// Property accessors
	@Id
	@Column (name = "id", unique = false, nullable = false, insertable = true, updatable = true)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne (cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn (name = "Apartment_relation_type_ID", unique = false, nullable = false, insertable = true, updatable = true)
	public ApartmentRelationType getApartmentRelationType() {
		return this.apartmentRelationType;
	}

	public void setApartmentRelationType(ApartmentRelationType apartmentRelationType) {
		this.apartmentRelationType = apartmentRelationType;
	}

	@ManyToOne (cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn (name = "Person_ID", unique = false, nullable = false, insertable = true, updatable = true)
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@ManyToOne (cascade = {}, fetch = FetchType.LAZY)
	@JoinColumn (name = "Apartment_ID", unique = false, nullable = false, insertable = true, updatable = true)
	public Apartment getApartment() {
		return this.apartment;
	}

	public void setApartment(Apartment apartment) {
		this.apartment = apartment;
	}

	@Column (name = "owning_part", unique = false, nullable = false, insertable = true, updatable = true)
	public int getOwningPart() {
		return this.owningPart;
	}

	public void setOwningPart(int owningPart) {
		this.owningPart = owningPart;
	}

	@Column (name = "begin", unique = false, nullable = false, insertable = true, updatable = true, length = 0)
	public Date getBegin() {
		return this.begin;
	}

	public void setBegin(Date begin) {
		this.begin = begin;
	}

	@Column (name = "end", unique = false, nullable = false, insertable = true, updatable = true, length = 0)
	public Date getEnd() {
		return this.end;
	}

	public void setEnd(Date end) {
		this.end = end;
	}

	@OneToMany (cascade = {}, fetch = FetchType.LAZY, mappedBy = "apartmentRelation")
	public Set<Acts> getActses() {
		return this.actses;
	}

	public void setActses(Set<Acts> actses) {
		this.actses = actses;
	}

}


