package org.flexpay.ab.persistence.temp;
// Generated 15.11.2007 14:59:52 by Hibernate Tools 3.2.0.b11


import org.flexpay.ab.persistence.Street;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Buildings generated by hbm2java
 */
@Entity
@Table(name="buildings"
    ,catalog="flexpay_db"
)
public class Buildings  implements java.io.Serializable {


     private int id;
     private Street street;
     private Building building;
     private int status;
     private Set<BuildingAttribute> buildingAttributes = new HashSet<BuildingAttribute>(0);

    public Buildings() {
    }

	
    public Buildings(int id, Street street, Building building, int status) {
        this.id = id;
        this.street = street;
        this.building = building;
        this.status = status;
    }
    public Buildings(int id, Street street, Building building, int status, Set<BuildingAttribute> buildingAttributes) {
       this.id = id;
       this.street = street;
       this.building = building;
       this.status = status;
       this.buildingAttributes = buildingAttributes;
    }
   
     @Id 
    
    @Column(name="id", nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Street_ID", nullable=false)
    public Street getStreet() {
        return this.street;
    }
    
    public void setStreet(Street street) {
        this.street = street;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Building_ID", nullable=false)
    public Building getBuilding() {
        return this.building;
    }
    
    public void setBuilding(Building building) {
        this.building = building;
    }
    
    @Column(name="status", nullable=false)
    public int getStatus() {
        return this.status;
    }
    
    public void setStatus(int status) {
        this.status = status;
    }
@OneToMany(fetch=FetchType.LAZY, mappedBy="buildings")
    public Set<BuildingAttribute> getBuildingAttributes() {
        return this.buildingAttributes;
    }
    
    public void setBuildingAttributes(Set<BuildingAttribute> buildingAttributes) {
        this.buildingAttributes = buildingAttributes;
    }




}


