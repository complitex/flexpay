<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
		"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.flexpay.ab.persistence">

	<class name="TownType" table="ab_town_types_tbl">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<property name="status" not-null="true" />
		<set name="translations" inverse="true" cascade="all-delete-orphan">
			<key column="town_type_id" not-null="true" />
			<one-to-many class="TownTypeTranslation" />
		</set>
	</class>

	<class name="TownTypeTranslation" table="ab_town_type_translations_tbl">
		<id name="id" column="ID">
			<generator class="native" />
		</id>
		<property name="name" />
		<property name="shortName" column="short_name" />
		<properties name="lang_town_type_pair" unique="true">
			<many-to-one name="lang" column="language_id"
						 class="org.flexpay.common.persistence.Language" />
			<many-to-one name="translatable" class="TownType" column="town_type_id" />
		</properties>
	</class>

	<class name="TownTypeTemporal" table="ab_town_types_temporal_tbl">
		<id name="id" column="id">
			<generator class="native" />
		</id>
		<property name="begin" column="begin_date" type="date" not-null="true" />
		<property name="end" column="end_date" type="date" not-null="true" />
		<property name="createDate" column="create_date" type="date" not-null="true" />
		<property name="invalidDate" column="invalid_date" type="date" not-null="true" />
		<many-to-one name="town" class="Town" column="town_id" not-null="true" />
		<many-to-one name="value" class="TownType" column="town_type_id" />
	</class>

	<query name="TownType.listTownTypes">
		select distinct tt
		from TownType tt
			left join fetch tt.translations
		where tt.status=?
	</query>

	<query name="TownType.readFull">
		from TownType tt
            left join fetch tt.translations tr
            left join fetch tr.lang l
            left join fetch l.translations
		where tt.id=?
	</query>

    <query name="TownType.findByNameAndLanguage">
        select distinct tt
        from TownType tt
            left join fetch tt.translations tr
            left join fetch tr.lang l
        where tr.name=? and l.id=? and tt.status=?
    </query>

    <query name="TownType.findByShortNameAndLanguage">
        select distinct tt
        from TownType tt
            left join fetch tt.translations tr
            left join fetch tr.lang l
        where tr.shortName=? and l.id=? and tt.status=?
    </query>

</hibernate-mapping>
