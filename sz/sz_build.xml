<?xml version="1.0" encoding="UTF-8"?>
<project name="flexpay_sz" basedir=".." default="sz.help">

	<import file="../eirc/eirc_build.xml" />

	<property file="sz/sz_build.properties" />
	<property file="eirc/eirc_build.properties" />
	<property file="bti/bti_build.properties" />
	<property file="ab/ab_build.properties" />
	<property file="common/common_build.properties" />

	<property name="sz.dir" value="${basedir}/sz" />

	<path id="sz.lib">
		<fileset dir="${sz.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<fileset id="sz.libraries" dir="${sz.dir}/lib">
		<include name="**/*" />
	</fileset>

	<path id="sz.jar" location="${build.dir}/lib/${sz.jar.name}" />
	<path id="sz.test.jar" location="${build.dir}/lib/${sz.tests.jar.name}" />

	<path id="sz.production.classpath">
		<path refid="eirc.production.classpath" />
		<path refid="sz.lib" />
	</path>

	<path id="sz.test.classpath">
		<path refid="eirc.test.classpath" />
		<path refid="sz.production.classpath" />
	</path>

    <path id="sz.runtests.classpath">
        <path refid="eirc.runtests.classpath" />
        <path refid="sz.test.classpath" />
		<path location="${sz.dir}/tests/data" />
    </path>

	<target name="sz.help" description="Print sz module build script options">
		<echo>
	Sz module build script
	Usage:
	ant -f sz_build.xml [target_name [target_options]]

	Available targets are:
		sz.db - Initialize database
		sz.ddl - Generate DDL of module
		sz.runtests - Run all module tests, possible option for this target is test.class.name that specifies test class name to run
			for example ant -f eirc_build.xml eirc.runtests -Dtest.class.name=org.flexpay.sz.service.TestCorrectionsService
		sz.war - Build production war
		</echo>
	</target>

    <target name="sz.clean.build">
		<antcall target="clean.build" />
	</target>

	<property name="sz.src.production" value="${sz.dir}/${src.dir};${eirc.src.production}" />
	<target name="sz.compile.production">
		<antcall target="template.compile.production">
			<param name="sources.dir" value="${sz.src.production}" />
			<reference refid="sz.production.classpath" torefid="classpath" />
		</antcall>
	</target>

	<property name="sz.src.test" value="${sz.src.production};${sz.dir}/${tests.src.dir};${eirc.src.test}" />
	<target name="sz.compile.test">
		<antcall target="template.compile.test">
			<param name="sources.dir" value="${sz.src.test}" />
			<reference refid="sz.test.classpath" torefid="classpath" />
		</antcall>
	</target>

	<target name="sz.jar.production" depends="sz.compile.production">
		<antcall target="template.jar">
			<param name="jar.name" value="${sz.jar.name}" /> 
		</antcall>
	</target>

	<!-- Build targets -->
	<target name="sz.docs" depends="sz.compile.production">
		<fileset id="sz.docs.resources" dir="${sz.dir}/docs" />
		<antcall target="template.docs">
			<param name="sources.dir" value="${sz.src.production}" />
			<param name="module_name" value="Social protection" />
			<param name="docs.file" value="${sz.docs.name}" />
			<reference refid="sz.docs.resources" torefid="resources" />
			<reference refid="sz.production.classpath" torefid="classpath" />
		</antcall>
	</target>

	<target name="sz.war">
		<antcall target="clean.all" />
		<antcall target="template.sz.war.production" />
	</target>

    <target name="sz.prepare.war.internal" depends="sz.compile.production,eirc.prepare.war.internal">
        <fileset id="sz.web.resources" dir="${sz.dir}/web" />
        <antcall target="template.prepare.war">
            <param name="to_dir" value="" />
            <param name="src.i18n.dir" value="${build.dir}/empty" />
            <reference refid="sz.web.resources" torefid="resources" />
        </antcall>

        <fileset dir="${sz.dir}/${src.dir}" id="sz.classes.resources">
            <patternset refid="resources_pattern" />
        </fileset>
        <antcall target="template.prepare.war">
            <param name="to_dir" value="/WEB-INF/classes" />
            <param name="src.i18n.dir" value="${sz.dir}/${src.dir}" />
            <reference refid="sz.classes.resources" torefid="resources" />
        </antcall>
    </target>

    <!-- Build production web-archive -->
	<target name="template.sz.war.production"
			depends="clean.all,sz.compile.production,sz.prepare.war,init.distr">

		<antcall target="template.set_db_name" />
		<antcall target="template.switch_instance_id" />
		<antcall target="template.update_version" />

		<war destfile="${distr.dir}/${sz.war.name}" needxmlfile="false">
			<fileset dir="${build.dir}/web" />
			<lib refid="sz.libraries" />
		</war>

		<antcall target="common.war.include.libs">
			<param name="warfile" value="${distr.dir}/${sz.war.name}" />
		</antcall>
	</target>

	<target name="sz.prepare.war">
		<antcall target="template.configure.module">
			<param name="module.name" value="sz" />
		</antcall>
		<antcall target="sz.prepare.war.internal" />
		<antcall target="war.security" />
		<antcall target="template.switch_log_name">
			<param name="log_name" value="sz" />
		</antcall>
		<antcall target="template.copy.classes" />
	</target>

	<target name="sz.prepare.test.war">
		<antcall target="sz.prepare.war.internal" />
		<antcall target="war.security" />
		<antcall target="template.copy.classes" />
	</target>


	<target name="sz.ddl" depends="clean.build,sz.compile.production">
		<antcall target="template.schemaexport">
			<param name="file_name" value="flexpay_sz.ddl.sql" />
			<param name="src.dir" value="${sz.src.production}" />
			<param name="hibernate.cfg"
				   value="${sz.dir}/web/WEB-INF/hibernate.cfg.xml" />
		</antcall>
	</target>

	<target name="sz.runtests" depends="clean.build,sz.compile.test,sz.prepare.test.war">
		<antcall target="sz.runtests.nobuild" />
	</target>

	<target name="sz.runtests.nobuild">
		<condition property="class.name" value="${test.class.name}" else="org.flexpay.sz.AllTests">
			<isset property="test.class.name" />
		</condition>
		<antcall target="template.run.tests">
			<param name="test_name" value="${class.name}" />
			<reference refid="sz.runtests.classpath" torefid="classpath" />
		</antcall>
	</target>

	<target name="sz.sql.init-db"
			depends="eirc.sql.init-db"
			unless="sz.sql.init-db.run">
		<concat destfile="${build.dir}/sql/init_db.sql" append="true" encoding="UTF-8">
			<fileset file="${sz.dir}/etc/sql/init_db.sql" />
		</concat>
		<property name="sz.sql.init-db.run" value="true" />
	</target>

	<target name="sz.sql.init-db-test"
			depends="eirc.sql.init-db-test"
			unless="sz.sql.init-db-test.run">
		<concat destfile="${build.dir}/sql/init_db.sql" append="true" encoding="UTF-8">
			<fileset file="${sz.dir}/etc/sql/init_db.sql" />
		</concat>
		<concat destfile="${build.dir}/sql/init_db.sql" append="true" encoding="UTF-8">
			<fileset file="${sz.dir}/etc/sql/init_db_test.sql" />
		</concat>
		<property name="sz.sql.init-db-test.run" value="true" />
	</target>

	<target name="sz.sql.all">
		<antcall target="common.sql.create-db" />
		<concat destfile="${build.dir}/sql/init_db.sql" append="true" encoding="UTF-8">
			<fileset file="${sz.dir}/etc/sql/flexpay_eirc.ddl.sql" />
		</concat>
		<antcall target="sz.sql.init-db" />
		<antcall target="template.set_db_name" />
	</target>

	<target name="sz.sql.all-test">
		<antcall target="common.sql.create-db" />
		<concat destfile="${build.dir}/sql/init_db.sql" append="true" encoding="UTF-8">
			<fileset file="${sz.dir}/etc/sql/flexpay_sz.ddl.sql" />
		</concat>
		<antcall target="sz.sql.init-db-test" />
		<antcall target="template.set_test_db_name" />
	</target>

	<target name="sz.db-test" description="create sz test db">
		<antcall target="sz.sql.all-test" />
		<antcall target="template.mysql.run">
			<param name="src.sql" value="${build.dir}/sql/init_db.sql" />
		</antcall>
	</target>

</project>
