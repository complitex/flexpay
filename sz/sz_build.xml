<?xml version="1.0" encoding="UTF-8"?>
<project name="flexpay_sz" basedir="..">

	<import file="../common/common_build.xml" />
	<import file="../ab/ab_build.xml" />

	<property file="sz/sz_build.properties" />
	<property file="ab/ab_build.properties" />
	<property file="common/common_build.properties" />

	<property name="sz.dir" value="${basedir}/sz" />
	
	<path id="sz.lib">
		<fileset dir="${sz.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>	

	<fileset id="sz.libraries" dir="${sz.dir}/lib">
		<include name="**/*" />
	</fileset>

	<path id="sz.jar" location="${build.dir}/lib/${sz.jar.name}" />

	<path id="sz.production.classpath">
		<path refid="ab.production.classpath" />
		<path refid="sz.lib" />
		<path refid="ab.jar" />
	</path>

	<target name="sz.clean.build">
		<antcall target="clean.build" />
	</target>

	<target name="sz.compile.production">
		<antcall target="template.compile.production">
			<param name="sources.dir" value="${sz.dir}/${src.dir}" />
			<reference refid="sz.production.classpath" torefid="classpath" />
		</antcall>
	</target>

	<!-- Build targets -->
	<target name="sz.build.production.jar"
			depends="ab.build.production.jar,sz.clean.build,sz.compile.production">
		<fileset dir="${build.dir}/empty" id="empty_res" />

		<antcall target="template.jar">
			<param name="dest.jar" value="${sz.jar.name}" />
			<reference refid="empty_res" torefid="resources" />
		</antcall>
	</target>

	<target name="sz.war.production.tomcat_mysql5">
		<antcall target="template.sz.war.production">
			<param name="app_server.properties" value="app_server_tomcat.properties" />
			<param name="data_source.properties" value="data_source_mysql5.properties" />
		</antcall>
	</target>

	<target name="sz.war.production.glassfish_mysql5">
		<antcall target="template.sz.war.production">
			<param name="app_server.properties" value="app_server_glassfish.properties" />
			<param name="data_source.properties" value="data_source_mysql5.properties" />
		</antcall>
	</target>

	<!-- Build production web-archive -->
	<target name="template.sz.war.production"
			depends="sz.build.production.jar,common.prepare.war,init.distr">
		<fileset id="ab.web.resources" dir="${ab.dir}/web" />
		<antcall target="template.prepare.war">
			<param name="to_dir" value="" />
			<param name="src.i18n.dir" value="${build.dir}/empty" />
			<reference refid="ab.web.resources" torefid="resources" />
		</antcall>

		<fileset dir="${ab.dir}/${src.dir}" id="ab.classes.resources">
			<patternset refid="resources_pattern" />
		</fileset>
		<antcall target="template.prepare.war">
			<param name="to_dir" value="/WEB-INF/classes" />
			<param name="src.i18n.dir" value="${ab.dir}/${src.dir}" />
			<reference refid="ab.classes.resources" torefid="resources" />
		</antcall>

		<copy file="${build.dir}/web/WEB-INF/configs/ps/${app_server.properties}"
			  overwrite="true"
			  tofile="${build.dir}/web/WEB-INF/configs/spring/common/app_server.properties" />
		<copy file="${build.dir}/web/WEB-INF/configs/ps/${data_source.properties}"
			  overwrite="true"
			  tofile="${build.dir}/web/WEB-INF/configs/spring/common/data_source.properties" />



		<fileset id="sz.web.resources" dir="${sz.dir}/web" />
		<antcall target="template.prepare.war">
			<param name="to_dir" value="" />
			<param name="src.i18n.dir" value="${build.dir}/empty" />
			<reference refid="sz.web.resources" torefid="resources" />
		</antcall>

		<fileset dir="${sz.dir}/${src.dir}" id="sz.classes.resources">
			<patternset refid="resources_pattern" />
		</fileset>
		<antcall target="template.prepare.war">
			<param name="to_dir" value="/WEB-INF/classes" />
			<param name="src.i18n.dir" value="${sz.dir}/${src.dir}" />
			<reference refid="sz.classes.resources" torefid="resources" />
		</antcall>

			  

		<war destfile="${distr.dir}/${sz.war.name}" needxmlfile="false">
			<fileset dir="${build.dir}/web" />
			<lib refid="sz.libraries" />
		</war>

		<antcall target="common.war.include.libs">
			<param name="warfile" value="${distr.dir}/${sz.war.name}" />
		</antcall>
	</target>











</project>