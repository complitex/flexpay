<?xml version="1.0" encoding="UTF-8"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="TradingDay"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="urn:jbpm.org:jpdl-3.2 http://docs.jboss.org/jbpm/xsd/jpdl-3.2.xsd">

    <swimlane name="Accounter">
        <!--<assignment class="org.flexpay.payments.process.handlers.AccounterAssignmentHandler"/>-->
        <assignment actor-id="ACCOUNTER" />
    </swimlane>


    <swimlane name="PaymentCollector">
        <!--<assignment class="org.flexpay.payments.process.handlers.PaymentCollectorAssignmentHandler"/>-->
        <assignment actor-id="PAYMENT_COLLECTOR" />
    </swimlane>


    <swimlane name="JobManager">
        <assignment class="org.flexpay.common.process.JobManagerAssignmentHandler" />
    </swimlane>

    <start-state name="Start">
        <description>
            Старт опердня
        </description>
        <transition to="MarkPaymentPointForClosing" name="start" />
    </start-state>

    <task-node name="MarkPaymentPointForClosing">
        <description>
            ожидаем от главного кассира пометки окончания опердня
        </description>
        <event type="node-enter">
            <script>
                <variable mapped-name="processStatus" access="write" name="PROCESS_STATUS" />
                <variable mapped-name="canUpdateOrCreateOperation" access="write" name="CAN_UPDATE_OR_CRETAE_OPERATION" />
                <variable name="START_TIME" mapped-name="startTime" access="write" />
                <expression>
                    processStatus = "Открыт";
                    canUpdateOrCreateOperation = "true";
                    startTime = org.flexpay.common.util.DateUtil.now();
                </expression>
            </script>
        </event>
        <task name="CloseTradingDay" swimlane="Accounter" />
        <task name="CloseTradingDay" swimlane="PaymentCollector">
            <timer duedate="#{START_TIME} + 1 business day" transition="Пометить на закрытие">
                <script>
                    <variable mapped-name="autoMode" access="write" name="AUTO_MODE" />
                    <expression>
                        autoMode = "true";
                    </expression>
                </script>
            </timer>
        </task>
        <transition to="generateEndOperationDayRegistryJob" name="Пометить на закрытие" />
    </task-node>


    <task-node name="generateEndOperationDayRegistryJob">
        <description>
            генерация реестра типа 12
        </description>
        <event type="node-enter">
            <script>
                <variable mapped-name="processStatus" access="write" name="PROCESS_STATUS" />
                <variable mapped-name="canUpdateOrCreateOperation" access="write" name="CAN_UPDATE_OR_CRETAE_OPERATION" />
                <expression>
                    processStatus = "Обрабатывается";
                    canUpdateOrCreateOperation = "false";
                </expression>
            </script>
        </event>
        <task swimlane="JobManager" />
        <transition to="sendRegistryJob" name="next" />
        <transition to="JobManagerError" name="error" />
        <transition to="AutoModeDecision" name="No registry created"/>
    </task-node>


    <task-node name="sendRegistryJob">
        <description>
            отправляем на указанный в ППП емейл с вложенным файлом сформированного реестра
        </description>
        <task swimlane="JobManager" />
        <transition to="AutoModeDecision" name="next" />
        <transition to="AutoModeDecision" name="error" />
    </task-node>


    <decision name="AutoModeDecision">
        <transition to="WaitForApprove" name="Human approval">
            <condition expression="#{executionContext.getVariable['AUTO_MODE'] == null}" />
        </transition>
        <transition to="end-state" name="AutoModeApproval">
            <condition expression="#{executionContext.getVariable['AUTO_MODE'] == 'true'}" />
        </transition>
    </decision>


    <task-node name="WaitForApprove">
        <description>
            ожидаем от бухгалтера действия
        </description>
        <event type="node-enter">
            <script>
                <variable mapped-name="processStatus" access="write" name="PROCESS_STATUS" />
                <expression>
                    processStatus = "Ожидает подтверждения";
                </expression>
            </script>
        </event>

        <task name="Aproove" swimlane="Accounter">
            <timer duedate="#{START_TIME} + 1 business day" transition="Подтвердить закрытие">
                <script>
                    <variable mapped-name="autoMode" access="write" name="AUTO_MODE" />
                    <expression>
                        autoMode = "true";
                    </expression>
                </script>
            </timer>
        </task>
        <transition to="MarkPaymentPointForClosing" name="Отменить пометку" />
        <transition to="ViewApproval" name="Подтвердить закрытие" />
    </task-node>

    <decision name="AutoModeDecision2">
        <transition to="ViewApproval" name="Human approval">
            <condition expression="#{executionContext.getVariable['AUTO_MODE'] == null}" />
        </transition>
        <transition to="end-state" name="AutoModeApproval">
            <condition expression="#{executionContext.getVariable['AUTO_MODE'] == 'true'}" />
        </transition>
    </decision>

    <task-node name="ViewApproval">
        <description>Просмотр Оператором сообщения о том что операционный день завершен</description>
        <event type="node-enter">
            <script>
                <variable mapped-name="processStatus" access="write" name="PROCESS_STATUS" />
                <expression>
                    processStatus = "Завершен";
                </expression>
            </script>
        </event>
        <task name="Approve" swimlane="PaymentCollector">
            <timer duedate="#{START_TIME} + 1 business day" transition="Принять сообщение" />
        </task>
        <transition to="end-state" name="Принять сообщение" />
    </task-node>

    <task-node name="JobManagerError">
        <description>
            Выслать администрутору е-мейл с сообщением о том, что процесс закончился с ошибкой
        </description>
        <event type="node-enter">
            <script>
                <variable mapped-name="processStatus" access="write" name="PROCESS_STATUS" />
                <variable mapped-name="canUpdateOrCreateOperation" access="write" name="CAN_UPDATE_OR_CRETAE_OPERATION" />
                <expression>
                    processStatus = "Допущена ошибка, обратитесь к администратору";
                    canUpdateOrCreateOperation = "false";
                </expression>
            </script>
        </event>
        <task name="sendEmailToAdministrator" swimlane="JobManager" />
        <transition to="end-state" name="error" />
        <transition to="end-state" name="next" />
    </task-node>

    <end-state name="end-state">
        <event type="node-enter">
            <script>
                <variable mapped-name="processStatus" access="write" name="PROCESS_STATUS" />
                <expression>
                    processStatus = "Закрыт";
                </expression>
            </script>
        </event>
    </end-state>

</process-definition>
        